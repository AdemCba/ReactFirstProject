{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Semih\\\\Desktop\\\\ReactProje\\\\intro\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Button } from 'reactstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Example = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Button, {\n      color: \"primary\",\n      children: \"primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Example;\nexport default Example;\nButton.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  // default: 'secondary'\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  // Pass in a Component to override default button element\n  // example: react-router Link\n  // default: 'button'\n  tag: PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n    $$typeof: PropTypes.symbol,\n    render: PropTypes.func\n  }), PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.string, PropTypes.shape({\n    $$typeof: PropTypes.symbol,\n    render: PropTypes.func\n  })]))]),\n  // ref will only get you a reference to the Button component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  // use close prop for BS4 close icon utility\n  close: PropTypes.bool\n};\nButton.defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Example\");","map":{"version":3,"sources":["C:/Users/Semih/Desktop/ReactProje/intro/src/App.js"],"names":["React","Button","Example","props","propTypes","active","PropTypes","bool","string","block","color","disabled","outline","tag","oneOfType","func","shape","$$typeof","symbol","render","arrayOf","innerRef","object","onClick","size","children","node","className","cssModule","close","defaultProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,YAAvB;;;AAIA,MAAMC,OAAO,GAAIC,KAAD,IAAW;AACzB,sBACE;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD,CARD;;KAAMD,O;AAUN,eAAeA,OAAf;AAEAD,MAAM,CAACG,SAAP,GAAmB;AACjBC,EAAAA,MAAM,EAAEC,SAAS,CAACC,IADD;AAEjB,gBAAcD,SAAS,CAACE,MAFP;AAGjBC,EAAAA,KAAK,EAAEH,SAAS,CAACC,IAHA;AAIjBG,EAAAA,KAAK,EAAEJ,SAAS,CAACE,MAJA;AAIQ;AACzBG,EAAAA,QAAQ,EAAEL,SAAS,CAACC,IALH;AAMjBK,EAAAA,OAAO,EAAEN,SAAS,CAACC,IANF;AAQjB;AACA;AACA;AACAM,EAAAA,GAAG,EAAEP,SAAS,CAACQ,SAAV,CAAoB,CACvBR,SAAS,CAACS,IADa,EAEvBT,SAAS,CAACE,MAFa,EAGvBF,SAAS,CAACU,KAAV,CAAgB;AAAEC,IAAAA,QAAQ,EAAEX,SAAS,CAACY,MAAtB;AAA8BC,IAAAA,MAAM,EAAEb,SAAS,CAACS;AAAhD,GAAhB,CAHuB,EAIvBT,SAAS,CAACc,OAAV,CAAkBd,SAAS,CAACQ,SAAV,CAAoB,CACpCR,SAAS,CAACS,IAD0B,EAEpCT,SAAS,CAACE,MAF0B,EAGpCF,SAAS,CAACU,KAAV,CAAgB;AAAEC,IAAAA,QAAQ,EAAEX,SAAS,CAACY,MAAtB;AAA8BC,IAAAA,MAAM,EAAEb,SAAS,CAACS;AAAhD,GAAhB,CAHoC,CAApB,CAAlB,CAJuB,CAApB,CAXY;AAsBjB;AACAM,EAAAA,QAAQ,EAAEf,SAAS,CAACQ,SAAV,CAAoB,CAACR,SAAS,CAACgB,MAAX,EAAmBhB,SAAS,CAACS,IAA7B,EAAmCT,SAAS,CAACE,MAA7C,CAApB,CAvBO;AAyBjBe,EAAAA,OAAO,EAAEjB,SAAS,CAACS,IAzBF;AA0BjBS,EAAAA,IAAI,EAAElB,SAAS,CAACE,MA1BC;AA2BjBiB,EAAAA,QAAQ,EAAEnB,SAAS,CAACoB,IA3BH;AA4BjBC,EAAAA,SAAS,EAAErB,SAAS,CAACE,MA5BJ;AA6BjBoB,EAAAA,SAAS,EAAEtB,SAAS,CAACgB,MA7BJ;AA+BjB;AACAO,EAAAA,KAAK,EAAEvB,SAAS,CAACC;AAhCA,CAAnB;AAmCAN,MAAM,CAAC6B,YAAP,GAAsB;AACpBpB,EAAAA,KAAK,EAAE,WADa;AAEpBG,EAAAA,GAAG,EAAE;AAFe,CAAtB","sourcesContent":["import React from 'react';\nimport { Button } from 'reactstrap';\n\n\n\nconst Example = (props) => {\n  return (\n    <div>\n      <Button color=\"primary\">primary\n      </Button>\n      \n    </div>\n  );\n}\n\nexport default Example;\n\nButton.propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string, // default: 'secondary'\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n\n  // Pass in a Component to override default button element\n  // example: react-router Link\n  // default: 'button'\n  tag: PropTypes.oneOfType([\n    PropTypes.func,\n    PropTypes.string,\n    PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    PropTypes.arrayOf(PropTypes.oneOfType([\n      PropTypes.func,\n      PropTypes.string,\n      PropTypes.shape({ $$typeof: PropTypes.symbol, render: PropTypes.func }),\n    ]))\n  ]),\n\n  // ref will only get you a reference to the Button component, use innerRef to get a reference to the DOM element (for things like focus management).\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n\n  // use close prop for BS4 close icon utility\n  close: PropTypes.bool,\n}\n\nButton.defaultProps = {\n  color: 'secondary',\n  tag: 'button',\n}"]},"metadata":{},"sourceType":"module"}